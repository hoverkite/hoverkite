name: Rust

on:
  push:
    branches: [main]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  find-crates:
    name: Find all crates
    runs-on: ubuntu-latest
    outputs:
      crates: ${{ steps.find.outputs.crates }}
    steps:
      - uses: actions/checkout@v2
      - name: Find crates
        id: find
        run: echo "::set-output name=crates::$(find -name Cargo.toml -printf '%h\n' | sed 's:./::' | jq -R | jq -sc)"

  format:
    name: Format
    needs: find-crates
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJSON(needs.find-crates.outputs.crates) }}
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - uses: actions/checkout@v2
      - name: Format Rust code
        run: cargo fmt --all -- --check

  build:
    name: Build and test
    needs: find-crates
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJSON(needs.find-crates.outputs.crates) }}
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: sudo apt-get install libudev-dev
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: thumbv7m-none-eabi
      - name: Build
        run: cargo build
      - name: Run tests
        run: cargo test
      - name: Run clippy
        run: cargo clippy # -- -D warnings
