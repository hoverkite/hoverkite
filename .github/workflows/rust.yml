name: Rust

on:
  push:
    branches: [main]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  find-crates:
    name: Find all crates
    runs-on: ubuntu-latest
    outputs:
      crates: ${{ steps.find.outputs.crates }}
    steps:
      - uses: actions/checkout@v2
      - name: Find crates
        id: find
        run: echo "::set-output name=crates::$(find -name Cargo.toml -printf '%h\n' | sed 's:./::' | jq -R | jq -sc)"

  format:
    name: Format
    needs: find-crates
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJSON(needs.find-crates.outputs.crates) }}
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - uses: actions/checkout@v2
      - name: Format Rust code
        run: cargo fmt --all -- --check

  build:
    name: Build and test
    needs: find-crates
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJSON(needs.find-crates.outputs.crates) }}
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: sudo apt-get install libudev-dev
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: thumbv7m-none-eabi
      - name: Build
        run: cargo build
      - name: Run tests
        run: cargo test
      - name: Run clippy
        run: cargo clippy # -- -D warnings

  coverage:
    name: Coverage
    needs: find-crates
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJSON(needs.find-crates.outputs.crates) }}
        exclude:
          - directory: hoverkite-firmware
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    env:
      RUSTC_BOOTSTRAP: 1
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: sudo apt-get install libudev-dev
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: thumbv7m-none-eabi
      - name: Install grcov
        run: curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -
      - name: Install llvm-tools
        run: rustup component add llvm-tools-preview
      - name: Build for coverage
        run: cargo build --all-features
        env:
          RUSTFLAGS: "-Zinstrument-coverage"
      - name: Run tests with coverage
        run: cargo test --all-features
        env:
          RUSTFLAGS: "-Zinstrument-coverage"
          LLVM_PROFILE_FILE: "test-coverage-%p-%m.profraw"
      - name: Convert coverage
        run: ./grcov . -s . --binary-path target/debug/ -t lcov --branch --ignore-not-existing -o target/debug/lcov.info
      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@v1
        with:
          directory: ${{ matrix.directory }}/target/debug
          fail_ci_if_error: true
