name: Rust

on:
  push:
    branches: [main]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory:
          - .
          - cross/hoverkite-firmware
          - cross/kitebox
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - uses: actions/checkout@v4
      - name: Format Rust code
        run: cargo fmt --all -- --check

  build:
    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory:
          - .
          - cross/hoverkite-firmware
          - cross/kitebox
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install libudev-dev
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: thumbv7m-none-eabi
      - name: Build
        run: cargo build
      - name: Run tests
        run: cargo test
      - name: Run clippy
        # clippy-check only works in the top-level directory.
        if: ${{ matrix.directory == '.' }}
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
      - name: Run clippy
        # Fall back to running clippy manually.
        if: ${{ matrix.directory != '.' }}
        run: cargo clippy # -- -D warnings

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    env:
      RUSTC_BOOTSTRAP: 1
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install libudev-dev
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: thumbv7m-none-eabi
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov
      - name: Run tests with coverage
        run: cargo llvm-cov test --all-features --codecov --output-path codecov-report.json
      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: codecov-report.json
          fail_ci_if_error: false
